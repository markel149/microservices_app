version: '3.1'
# Los puertos se pueden dejar de publicar si tenemos el haproxy, porque se ven todos desde la misma red del compos
# Solo hay que dejar los puertos expuestos en haproxy
services:
  order:
    container_name: order
    build: ./order
    ports:
      - 8003:8000
    volumes:
      - ./order:/app
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI_ORDER}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: always
    depends_on:
      - rabbitmq
      - auth
  auth:
    container_name: auth
    build: ./auth
    ports:
      - 8000:8000
    volumes:
      - ./auth:/app
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI_CLIENT}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    depends_on:
      - rabbitmq
    restart: always
  payment:
    container_name: payment
    build: ./payment
    ports:
      - 8004:8000
    volumes:
      - ./payment:/app
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI_PAYMENT}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: always
    depends_on:
      - rabbitmq
      - auth
  haproxy:
    container_name: haproxy
    image: haproxy:latest
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
      - ./haproxy/aas.crt:/usr/local/etc/haproxy/aas.crt
    ports:
      - '${HA_PROXY_PORT}:${HA_PROXY_PORT}'
      - '${HA_PROXY_STATS_PORT}:${HA_PROXY_STATS_PORT}'
      - '${HA_PROXY_TLS_PORT}:${HA_PROXY_TLS_PORT}'
    environment:
      HA_PROXY_STATS_PORT: '${HA_PROXY_STATS_PORT}'
      HA_PROXY_PORT: '${HA_PROXY_PORT}'
      HA_PROXY_TLS_PORT: '${HA_PROXY_TLS_PORT}'
    restart: always
    depends_on:
      - order
      - payment
      - delivery
      - rabbitmq
      - machine
      - logger
      - auth
  machine:
    container_name: machine
    build: ./machine
    ports:
      - 8002:8000
    volumes: 
      - ./machine:/app
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI_MACHINE}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: always
    depends_on:
      - rabbitmq
  delivery:
    container_name: delivery
    build: ./delivery
    ports:
      - 8001:8000
    volumes: 
      - ./delivery:/app
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI_DELIVERY}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: always
    depends_on:
      - rabbitmq
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    volumes:
      - ./rabbitmq/config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/certs/:/etc/rabbitmq/certs/
    ports:
      - 5671:5671
      - 15671:15671
      - 15691:15691
      - 15672:15672
      - 5672:5672
  logger:
    container_name: logger
    build: ./logger
    ports:
      - 8005:8000
    volumes:
      - ./logger:/app
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI_LOGGER}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: always
    depends_on:
      - rabbitmq
